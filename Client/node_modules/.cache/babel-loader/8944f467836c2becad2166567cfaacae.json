{"ast":null,"code":"var _jsxFileName = \"/Users/anirudhrv/Desktop/Misc/FrameCollectionApplication/Frame-Division-Data-Collection/Client/src/SPA_components/TestNodeAPI.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport axios from 'axios';\n\nclass TestAPI extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.testdownloadapi = () => {\n      console.log(\"inside the testnodeapi function : \");\n      axios.post(\"http://localhost:4000/download/\", {\n        username: 'sathyaswarupa',\n        videoname: 'indiantraffic',\n        videourl: 'https://www.youtube.com/watch?v=1Ap2G1Bfm0M'\n      }).then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(res);\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n        console.log(err);\n      });\n    };\n\n    this.testdjangoapi = () => {\n      var username = 'anirudhrv';\n      var videoname = 'testing';\n      var imagetype = 'png';\n      var videourl = 'http://localhost:4000/videos/' + username + '/downloads/' + videoname + '.mp4';\n      var low = '1';\n      var high = '5';\n      var data = {\n        'username': username,\n        'videoname': videoname,\n        'videourl': videourl,\n        'imagetype': imagetype,\n        'low': low,\n        'high': high\n      };\n      console.log(\"inside the testdjangoapi function : \");\n      axios.post(\"http://127.0.0.1:8000/index/\", data).then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(\"API message : \");\n        console.log(res);\n        console.log(res.data[\"message\"]);\n\n        if (this.DataRetrieved) {\n          this.DataRetrieved.innerHTML = res.data[\"message\"];\n        }\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n        console.log(err);\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"XP-2 TESTING API TO NODE, check developer tools for console.\"), React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.testdownloadapi,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \" TEST DOWNLOAD OF VIDEO \"), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.testdjangoapi,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" TEST API TO DJANGO \"), React.createElement(\"h1\", {\n      className: \"name\",\n      ref: c => this.DataRetrieved = c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TestAPI;","map":{"version":3,"sources":["/Users/anirudhrv/Desktop/Misc/FrameCollectionApplication/Frame-Division-Data-Collection/Client/src/SPA_components/TestNodeAPI.js"],"names":["React","Component","axios","TestAPI","testdownloadapi","console","log","post","username","videoname","videourl","then","res","catch","err","testdjangoapi","imagetype","low","high","data","DataRetrieved","innerHTML","render","c"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\n\n\nclass TestAPI extends Component {\n//TODO : ADD INTRODUCTION TO PROJECT\n\n\ntestdownloadapi = () =>{\n  console.log(\"inside the testnodeapi function : \")\n  axios.post(\"http://localhost:4000/download/\",{\n    username : 'sathyaswarupa',\n    videoname : 'indiantraffic',\n    videourl : 'https://www.youtube.com/watch?v=1Ap2G1Bfm0M'\n  })\n    .then(res => { // then print response status\n      //toast.success('upload success')\n      console.log(res)\n    })\n    .catch(err => {\n    // then print response status\n    //  toast.error('upload fail')\n    console.log(\"fail\")\n    console.log(err)\n    })\n}\n\ntestdjangoapi = () =>{\n  var username = 'anirudhrv'\n  var videoname = 'testing'\n  var imagetype = 'png'\n  var videourl = 'http://localhost:4000/videos/'+username+'/downloads/'+videoname+'.mp4'\n  var low = '1'\n  var high = '5'\n  var data = {'username':username,'videoname':videoname,'videourl':videourl,'imagetype':imagetype,'low':low,'high':high}\n  console.log(\"inside the testdjangoapi function : \")\n  axios.post(\"http://127.0.0.1:8000/index/\",data)\n    .then(res => { // then print response status\n      //toast.success('upload success')\n      console.log(\"API message : \")\n      console.log(res)\n      console.log(res.data[\"message\"])\n      if(this.DataRetrieved) {\n       this.DataRetrieved.innerHTML = res.data[\"message\"];\n    }\n\n    })\n    .catch(err => { // then print response status\n    //  toast.error('upload fail')\n    console.log(\"fail\")\n    console.log(err)\n    })\n}\n\n\n  render() {\n    return (\n      <div className=\"App\">\n      <h1>XP-2 TESTING API TO NODE, check developer tools for console.</h1>\n      <pre>\n\n      </pre>\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.testdownloadapi}> TEST DOWNLOAD OF VIDEO </button>\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.testdjangoapi}> TEST API TO DJANGO </button>\n\n      <h1 className='name' ref = {c => this.DataRetrieved = c}></h1>\n      </div>\n    );\n  }\n}\n\nexport default TestAPI;\n"]},"metadata":{},"sourceType":"module"}