{"ast":null,"code":"var _jsxFileName = \"/Users/anirudhrv/Desktop/Misc/FrameCollectionApplication/Frame-Division-Data-Collection/Client/src/SPA_components/TestNodeAPI.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport axios from 'axios';\n\nclass TestAPI extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.tesnodeapi = () => {\n      var data = {\n        'username': 'anirudhrv',\n        'imagename': 'scrib.jpeg',\n        'imagedata': \"something in text here\"\n      };\n      console.log(\"inside the testnodeapi function : \");\n      axios.post(\"http://192.168.1.8:4000/saveastextfile/\", {\n        username: 'anirudhrv',\n        imagename: 'testingscrib.jpeg',\n        imagedata: 'something in text here'\n      }).then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(\"API message : \");\n        console.log(res);\n        console.log(res.data[\"message\"]);\n\n        if (this.DataRetrieved) {\n          this.DataRetrieved.innerHTML = res.data[\"message\"];\n        }\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n        console.log(err);\n      });\n    };\n\n    this.testdownloadapi = () => {\n      console.log(\"inside the testnodeapi function : \");\n      axios.post(\"http://192.168.1.8:4000/downloadfiles/\", {\n        username: 'anirudhrv',\n        videoname: 'videofromfrontend',\n        videourl: 'http://www.youtube.com/watch?v=90AiXO1pAiA'\n      }).then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(res);\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n        console.log(err);\n      });\n    };\n\n    this.testdownloadzip = () => {\n      axios({\n        url: 'http://localhost:4000/file/anirudhrv.zip',\n        method: 'GET',\n        responseType: 'blob' // important\n\n      }).then(response => {\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'anirudhrv.zip');\n        document.body.appendChild(link);\n        link.click();\n      });\n    };\n\n    this.testfiledownload = () => {\n      console.log(\"inside the testnodeapi function : \");\n      axios.post(\"http://192.168.1.8:4000/downloadfiles/\", {\n        username: 'anirudhrv'\n      }).then(res => {\n        // then print response status\n        //toast.success('upload success')\n        console.log(res); // after creating the file, now download\n\n        axios({\n          url: 'http://localhost:4000/file/anirudhrv.zip',\n          method: 'GET',\n          responseType: 'blob' // important\n\n        }).then(response => {\n          const url = window.URL.createObjectURL(new Blob([response.data]));\n          const link = document.createElement('a');\n          link.href = url;\n          link.setAttribute('download', 'anirudhrv.zip');\n          document.body.appendChild(link);\n          link.click();\n        });\n      }).catch(err => {\n        // then print response status\n        //  toast.error('upload fail')\n        console.log(\"fail\");\n        console.log(err);\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"TESTING API TO NODE, check developer tools for console.\"), React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.testdownloadapi,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \" TEST DOWNLOAD OF video \"), React.createElement(\"h1\", {\n      className: \"name\",\n      ref: c => this.DataRetrieved = c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TestAPI;","map":{"version":3,"sources":["/Users/anirudhrv/Desktop/Misc/FrameCollectionApplication/Frame-Division-Data-Collection/Client/src/SPA_components/TestNodeAPI.js"],"names":["React","Component","axios","TestAPI","tesnodeapi","data","console","log","post","username","imagename","imagedata","then","res","DataRetrieved","innerHTML","catch","err","testdownloadapi","videoname","videourl","testdownloadzip","url","method","responseType","response","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","testfiledownload","render","c"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\n\n\nclass TestAPI extends Component {\n//TODO : ADD INTRODUCTION TO PROJECT\n\n\ntesnodeapi = () =>{\n  var data = {'username':'anirudhrv','imagename':'scrib.jpeg','imagedata':\"something in text here\"}\n  console.log(\"inside the testnodeapi function : \")\n  axios.post(\"http://192.168.1.8:4000/saveastextfile/\",{\n    username : 'anirudhrv',\n    imagename : 'testingscrib.jpeg',\n    imagedata : 'something in text here'\n  })\n    .then(res => { // then print response status\n      //toast.success('upload success')\n      console.log(\"API message : \")\n      console.log(res)\n      console.log(res.data[\"message\"])\n      if(this.DataRetrieved) {\n       this.DataRetrieved.innerHTML = res.data[\"message\"];\n    }\n\n    })\n    .catch(err => { // then print response status\n    //  toast.error('upload fail')\n    console.log(\"fail\")\n    console.log(err)\n    })\n}\n\ntestdownloadapi = () =>{\n  console.log(\"inside the testnodeapi function : \")\n  axios.post(\"http://192.168.1.8:4000/downloadfiles/\",{\n    username : 'anirudhrv',\n    videoname : 'videofromfrontend',\n    videourl : 'http://www.youtube.com/watch?v=90AiXO1pAiA'\n  })\n    .then(res => { // then print response status\n      //toast.success('upload success')\n      console.log(res)\n    })\n    .catch(err => {\n    // then print response status\n    //  toast.error('upload fail')\n    console.log(\"fail\")\n    console.log(err)\n    })\n}\n\ntestdownloadzip = () =>{\n  axios({\n    url: 'http://localhost:4000/file/anirudhrv.zip',\n    method: 'GET',\n    responseType: 'blob', // important\n  }).then((response) => {\n    const url = window.URL.createObjectURL(new Blob([response.data]));\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', 'anirudhrv.zip');\n    document.body.appendChild(link);\n    link.click();\n  });\n}\n\ntestfiledownload = () =>{\n  console.log(\"inside the testnodeapi function : \")\n  axios.post(\"http://192.168.1.8:4000/downloadfiles/\",{\n    username : 'anirudhrv'\n  })\n    .then(res => { // then print response status\n      //toast.success('upload success')\n      console.log(res)\n      // after creating the file, now download\n      axios({\n        url: 'http://localhost:4000/file/anirudhrv.zip',\n        method: 'GET',\n        responseType: 'blob', // important\n      }).then((response) => {\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'anirudhrv.zip');\n        document.body.appendChild(link);\n        link.click();\n      });\n\n    })\n    .catch(err => {\n    // then print response status\n    //  toast.error('upload fail')\n    console.log(\"fail\")\n    console.log(err)\n    })\n}\n  render() {\n    return (\n      <div className=\"App\">\n      <h1>TESTING API TO NODE, check developer tools for console.</h1>\n      <pre>\n\n      </pre>\n      <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.testdownloadapi}> TEST DOWNLOAD OF video </button>\n      <h1 className='name' ref = {c => this.DataRetrieved = c}></h1>\n      </div>\n    );\n  }\n}\n\nexport default TestAPI;\n"]},"metadata":{},"sourceType":"module"}